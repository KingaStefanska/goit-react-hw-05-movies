{"version":3,"file":"static/js/888.99775835.chunk.js","mappings":"uOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCP,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBM,IAFrB,cAChBJ,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,IADrC,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKVK,EAAO,mCAAG,WAAMD,GAAN,uFACET,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFjB,cACfE,EADe,yBAIdA,EAASC,KAAKC,SAJA,2CAAH,sDAOPM,EAAU,mCAAG,WAAMF,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFd,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,sDAOjBO,EAAM,CACVV,YAAAA,EACAI,SAAAA,EACAE,WAAAA,EACAE,QAAAA,EACAC,WAAAA,GAGF,M,mHC5CA,GAAiB,E,SCwEjB,EAlEqB,WAAO,IAAD,IACzB,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQN,GAAYO,EAAAA,EAAAA,MAAZP,QACFQ,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAMhD,IAJAC,EAAAA,EAAAA,YAAU,YACRf,EAAAA,EAAAA,IAAWC,GAASe,KAAKT,EAC1B,GAAE,CAACN,IAECK,EAIL,OACE,iCACE,SAAC,KAAD,CAAMW,UAAWC,EAAAA,SAAcC,GAAIR,EAASS,QAA5C,sBAGA,iBAAKH,UAAWC,EAAAA,IAAhB,WACE,0BACE,gBACED,UAAWC,EAAAA,IACXG,IACEf,EAAMgB,YAAN,8CAC2ChB,EAAMgB,aADjD,+EAIFC,IAAG,UAAKjB,EAAMkB,YAGlB,4BACE,gBAAIP,UAAWC,EAAAA,GAAf,UACGZ,EAAMkB,MADT,KACkBlB,EAAMmB,aAAaC,MAAM,EAAG,GAD9C,QAGA,eAAGT,UAAWC,EAAAA,EAAd,qBAA8BZ,EAAMqB,aAAaC,QAAQ,OACzD,eAAIX,UAAWC,EAAAA,GAAf,uBACA,cAAGD,UAAWC,EAAAA,EAAd,SAAsBZ,EAAMuB,YAC5B,eAAIZ,UAAWC,EAAAA,GAAf,qBACA,cAAGD,UAAWC,EAAAA,EAAd,SACGZ,EAAMwB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,gBAIlD,4BACE,eAAIjB,UAAWC,EAAAA,GAAf,qCACA,2BACE,yBACE,SAAC,KAAD,CAAMD,UAAWC,EAAAA,KAAUC,GAAI,OAA/B,qBAIF,yBACE,SAAC,KAAD,CAAMF,UAAWC,EAAAA,KAAUC,GAAI,UAA/B,8BAMN,SAAC,EAAAgB,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,QAIP,C","sources":["API/Api.js","components/MovieDetails/MovieDetails.module.css","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '39ea42ad0e0931902f179ffc59d3f46a';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  getTrending,\n  getQuery,\n  getDetails,\n  getCast,\n  getReviews,\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { Suspense, useRef } from 'react';\nimport { useState, useEffect } from 'react';\nimport { Outlet, Link, useLocation, useParams } from 'react-router-dom';\nimport getDetails from 'API/Api';\nimport PropTypes from 'prop-types';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLink = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    getDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <>\n      <Link className={css.backLink} to={backLink.current}>\n        Go back\n      </Link>\n      <div className={css.div}>\n        <div>\n          <img\n            className={css.img}\n            src={\n              movie.poster_path\n                ? `https://www.themoviedb.org/t/p/w500/${movie.poster_path}`\n                : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n            }\n            alt={`${movie.title}`}\n          />\n        </div>\n        <div>\n          <h2 className={css.h2}>\n            {movie.title} ({movie.release_date.slice(0, 5)})\n          </h2>\n          <p className={css.p}>Rating: {movie.vote_average.toFixed(2)}</p>\n          <h3 className={css.h3}>Overview</h3>\n          <p className={css.p}>{movie.overview}</p>\n          <h3 className={css.h3}>Genres</h3>\n          <p className={css.p}>\n            {movie.genres.map(genre => genre.name).join(' / ')}\n          </p>\n        </div>\n      </div>\n      <div>\n        <h2 className={css.h2}>Additional information</h2>\n        <ul>\n          <li>\n            <Link className={css.link} to={'cast'}>\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link className={css.link} to={'reviews'}>\n              Reviews\n            </Link>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["axios","API_KEY","getTrending","response","data","results","getQuery","query","getDetails","movieId","getCast","getReviews","api","useState","movie","setMovie","useParams","location","useLocation","backLink","useRef","state","from","useEffect","then","className","css","to","current","src","poster_path","alt","title","release_date","slice","vote_average","toFixed","overview","genres","map","genre","name","join","Suspense","fallback"],"sourceRoot":""}