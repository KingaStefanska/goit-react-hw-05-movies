{"version":3,"file":"static/js/76.ef5392e9.chunk.js","mappings":"sOAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAU,mCAEVC,EAAW,mCAAG,oGACFF,EAAAA,EAAAA,IAAA,qCAAwCC,IADtC,cACnBE,EADmB,yBAElBA,EAASC,KAAKC,SAFI,2CAAH,qDAKXC,EAAQ,mCAAG,WAAMC,GAAN,uFACCP,EAAAA,EAAAA,IAAA,+BACGC,EADH,kBACoBM,IAFrB,cAChBJ,EADgB,yBAIfA,EAASC,KAAKC,SAJC,2CAAH,sDAORG,EAAU,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBAAmBS,EAAnB,oBAAsCR,IADrC,cAClBE,EADkB,yBAEjBA,EAASC,KAAKC,SAFG,2CAAH,sDAKVK,EAAO,mCAAG,WAAMD,GAAN,uFACET,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFjB,cACfE,EADe,yBAIdA,EAASC,KAAKO,MAJA,2CAAH,sDAOPC,EAAU,mCAAG,WAAMH,GAAN,uFACDT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACeR,IAFd,cAClBE,EADkB,yBAIjBA,EAASC,KAAKC,SAJG,2CAAH,sDAOjBQ,EAAM,CACVX,YAAAA,EACAI,SAAAA,EACAE,WAAAA,EACAE,QAAAA,EACAE,WAAAA,GAGF,M,0GC5CA,GAAiB,E,SCwCjB,EAnCa,WACX,OAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAMR,IAJAS,EAAAA,EAAAA,YAAU,YACRR,EAAAA,EAAAA,IAAQD,GAASU,KAAKH,EACvB,GAAE,CAACP,IAECM,EAIL,OACE,+BACE,eAAIK,UAAWC,EAAAA,GAAf,SACGN,EAAUO,KAAI,SAAAC,GAAK,OAClB,gBAAIH,UAAWC,EAAAA,GAAf,WACE,gBACED,UAAWC,EAAAA,IACXG,IACED,EAAME,aAAN,8CAC2CF,EAAME,cADjD,+EAIFC,IAAKH,EAAMI,iBAEb,eAAIP,UAAWC,EAAAA,GAAf,SAAwBE,EAAMK,QAC9B,eAAGR,UAAWC,EAAAA,EAAd,iBAA0BE,EAAMM,eAXNN,EAAMO,GADhB,OAkB3B,C","sources":["API/Api.js","components/Cast/Cast.module.css","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const API_KEY = '39ea42ad0e0931902f179ffc59d3f46a';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getQuery = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const getCast = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return response.data.results;\n};\n\nconst api = {\n  getTrending,\n  getQuery,\n  getDetails,\n  getCast,\n  getReviews,\n};\n\nexport default api;\n","// extracted by mini-css-extract-plugin\nexport default {};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport getCast from 'API/Api';\nimport PropTypes from 'prop-types';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getCast(movieId).then(setMovieCast);\n  }, [movieId]);\n\n  if (!movieCast) {\n    return;\n  }\n\n  return (\n    <>\n      <ul className={css.ul}>\n        {movieCast.map(actor => (\n          <li className={css.li} key={actor.id}>\n            <img\n              className={css.img}\n              src={\n                actor.profile_path\n                  ? `https://www.themoviedb.org/t/p/w500/${actor.profile_path}`\n                  : `https://upload.wikimedia.org/wikipedia/commons/6/65/No-Image-Placeholder.svg`\n              }\n              alt={actor.original_name}\n            />\n            <h3 className={css.h3}>{actor.name}</h3>\n            <p className={css.p}>As: {actor.character}</p>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n\nCast.propTypes = {\n  movieId: PropTypes.string.isRequired,\n};\n"],"names":["axios","API_KEY","getTrending","response","data","results","getQuery","query","getDetails","movieId","getCast","cast","getReviews","api","useState","movieCast","setMovieCast","useParams","useEffect","then","className","css","map","actor","src","profile_path","alt","original_name","name","character","id"],"sourceRoot":""}